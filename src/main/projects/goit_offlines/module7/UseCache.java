package module7;

import java.util.HashMap;
import java.util.Scanner;

public class UseCache {
    public static final String HARRY_POTTER = "Harry Potter";
    public static final String BOOK_NAME_1984 = "1984";
    public static final String SHANTARAM = "SHANTARAM";
    public static final String SHERLOK = "sherlok";

    static HashMap<String, String> biggestWordCache = new HashMap<>();

    public static void main(String[] args) {
        HashMap<String, String> library = createLibrary();
        Scanner scanner = new Scanner(System.in);
        String bookName = scanner.nextLine();
        while (!bookName.equals("exit")) {
            if (bookName.startsWith("new books:")) {
                bookName = bookName.replace("new books:", "");
                String[] booksToClear = bookName.split(",");
                clearCache(booksToClear);
                bookName = scanner.nextLine();
                continue;
            }
            String bookText = library.get(bookName.toUpperCase());
            if (bookText != null) {
                String biggestWord;
                if (biggestWordCache.get(bookName) != null) {
                    long before = System.currentTimeMillis();
                    biggestWord = biggestWordCache.get(bookName);
                    System.out.println("Took from cache : " + (System.currentTimeMillis() - before));
                } else {
                    biggestWord = calculateBiggestWord(bookText);
                    biggestWordCache.put(bookName, biggestWord);
                }
                System.out.println(biggestWord);
            } else {
                System.out.println("Cant find a book");
            }
            bookName = scanner.nextLine();
        }

    }


    private static void clearCache(String... books) {
        for (String book :
                books) {
            biggestWordCache.put(book.trim(), null);
        }
    }

    private static String calculateBiggestWord(String bookText) {
        long before = System.currentTimeMillis();
        String[] symbolsToRemove = {".", ",", "«", "»", "—", ")", "(", ":", ";"};

        for (String c : symbolsToRemove) {
            bookText = bookText.replace(c, "");
        }

        String[] words = bookText.split(" ");

        String maxWord = "";

        for (String word : words) {
            if (word.length() > maxWord.length()) {
                maxWord = word;
            }
        }

        System.out.println("CALCULATED : took a long time : " + (System.currentTimeMillis() - before));
        return maxWord;
    }

    private static HashMap<String, String> createLibrary() {
        HashMap<String, String> library = new HashMap<>();
        String harry_potter = "Мистер и миссис Дурсль проживали в доме номер четыре по Тисовой улице и всегда с гордостью заявляли, что они, слава богу, абсолютно нормальные люди. Уж от кого-кого, а от них никак нельзя было ожидать, чтобы они попали в какую-нибудь странную или загадочную ситуацию. Мистер и миссис Дурсль весьма неодобрительно относились к любым странностям, загадкам и прочей ерунде. Мистер Дурсль возглавлял фирму под названием «Граннингс», которая специализировалась на производстве дрелей. Это был полный мужчина с очень пышными усами и очень короткой шеей. Что же касается миссис Дурсль, она была тощей блондинкой с шеей почти вдвое длиннее, чем положено при ее росте. Однако этот недостаток пришелся ей весьма кстати, поскольку большую часть времени миссис Дурсль следила за соседями и подслушивала их разговоры. А с такой шеей, как у нее, было очень удобно заглядывать за чужие заборы. У мистера и миссис Дурсль был маленький сын по имени Дадли, и, по их мнению, он был самым чудесным ребенком на свете. Семья Дурсль ей имела все, чего только можно пожелать. Но был у них и один секрет. Причем больше всего на свете они боялись, что кто-нибудь о нем узнает. Дурсли даже представить себе не могли, что с ними будет, если выплывет правда о Поттерах. Миссис Поттер приходилась миссис Дурсль родной сестрой, но они не виделись вот уже несколько лет. Миссис Дурсль даже делала вид, что у нее вовсе нет никакой сестры, потому что сестра и ее никчемный муж были полной противоположностью Дурслям. Дурсли содрогались при одной мысли о том, что скажут соседи, если на Тисовую улицу пожалуют Поттеры. Дурсли знали, что у Поттеров тоже есть маленький сын, но они никогда его не видели. И они категорически не хотели, чтобы их Дадли общался с ребенком таких родителей. Когда во вторник мистер и миссис Дурсль проснулись скучным и серым утром — а именно с этого утра начинается наша история, — ничто, включая покрытое тучами небо, не предвещало, что вскоре по всей стране начнут происходить странные и загадочные вещи. Мистер Дурсль что-то напевал себе под нос, завязывая самый отвратительный из своих галстуков. А миссис Дурсль, с трудом усадив сопротивляющегося и орущего Дадли на высокий детский стульчик, со счастливой улыбкой пересказывала мужу последние сплетни. Никто из них не заметил, как за окном пролетела большая сова-неясыть. В половине девятого мистер Дурсль взял свой портфель, клюнул миссис Дурсль в щеку и попытался на прощанье поцеловать Дадли, но промахнулся, потому что Дадли впал в ярость, что с ним происходило довольно часто. Он раскачивался взад-вперед на стульчике, ловко выуживал из тарелки кашу и заляпывал ею стены. — Ух, ты моя крошка, — со смехом выдавил из себя мистер Дурсль, выходя из дома. Он сел в машину и выехал со двора. На углу улицы мистер Дурсль заметил, что происходит что-то странное, — на тротуаре стояла кошка и внимательно изучала лежащую перед ней карту. В первую секунду мистер Дурсль даже не понял, что именно он увидел, но затем, уже миновав кошку, затормозил и резко оглянулся. На углу Тисовой улицы действительно стояла полосатая кошка, но никакой карты видно не было. — И привидится же такое! — буркнул мистер Дурсль. Наверное, во всем были виноваты мрачное утро и тусклый свет фонаря. На всякий случай мистер Дурсль закрыл глаза, потом открыл их и уставился на кошку. А кошка уставилась на него. Мистер Дурсль отвернулся и поехал дальше, продолжая следить за кошкой в зеркало заднего вида. Он заметил, что кошка читает табличку, на которой написано «Тисовая улица». Нет, конечно же, не читает, поспешно поправил он самого себя, а просто смотрит на табличку. Ведь кошки не умеют читать — равно как и изучать карты. Мистер Дурсль потряс головой и попытался выбросить из нее кошку. И пока его автомобиль ехал к Лондону из пригорода, мистер Дурсль думал о крупном заказе на дрели, который рассчитывал сегодня получить. Но когда он подъехал к Лондону, заполнившие его голову дрели вылетели оттуда в мгновение ока, потому что, попав в обычную утреннюю автомобильную пробку и от нечего делать глядя по сторонам, мистер Дурсль заметил, что на улицах появилось множество очень странно одетых людей. Людей в мантиях. Мистер Дурсль не переносил людей в нелепой одежде, да взять хотя бы нынешнюю молодежь, которая расхаживает черт знает в чем! И вот теперь эти, нарядившиеся по какой-то дурацкой моде. Мистер Дурсль забарабанил пальцами по рулю. Его взгляд упал на сгрудившихся неподалеку странных типов, оживленно шептавшихся друг с другом. Мистер Дурсль пришел в ярость, увидев, что некоторые из них совсем не молоды, — подумать только, один из мужчин выглядел даже старше него, а позволил себе облачиться в изумрудно-зеленую мантию! Ну и тип! Но тут мистера Дурсля осенила мысль, что эти непонятные личности наверняка всего лишь собирают пожертвования или что-нибудь в этом роде... Так оно и есть! Стоявшие в пробке машины наконец тронулись с места, и несколько минут спустя мистер Дурсль въехал на парковку фирмы «Граннингс». Его голова снова была забита дрелями. Кабинет мистера Дурсля находился на девятом этаже, где он всегда сидел спиной к окну. Предпочитай он сидеть лицом к окну, ему, скорее всего, трудно было бы этим утром сосредоточиться на дрелях. Но он сидел к окну спиной и не видел пролетающих сов — подумать только, сов, летающих не ночью, когда им и положено, а средь бела дня! И это уже не говоря о том, что совы — лесные птицы, и в городах, тем более таких больших, как Лондон, не живут. В отличие от мистера Дурсля, находившиеся на улице люди отлично видели этих сов, стремительно пролетающих мимо них одна за другой, и широко раскрывали рты от удивления и показывали на них пальцами. Большинство этих людей в жизни своей не видели ни единой совы, даже в ночное время. В общем, у мистера Дурсля было вполне нормальное, лишенное сов утро. Он накричал на пятерых подчиненных, сделал несколько важных звонков и несколько раз повысил голос на своих телефонных собеседников. Так что настроение у него было просто отличное — до тех пор, пока он не решил немного размять ноги и купить себе булочку в булочной напротив. Мистер Дурсль уже забыл о людях в мантиях и не вспоминал о них, пока не столкнулся с группкой странных типов неподалеку от булочной. Он не мог понять, почему при одном только взгляде на них ему становилось не по себе.";
        String _1984 = "1984 (тысяча девятьсот восемьдесят четвёртый) год по григорианскому календарю — високосный год, начинающийся в воскресенье. Это 1984 год нашей эры, 984 год 2 тысячелетия, 84 год XX века, 4 год 9-го десятилетия XX века, 5 год 1980-х годов.";
        String shantaram = "Шантарам (англ. Shantaram, маратх. शांताराम, «мирный человек») — ааааааааааааааааауууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууууроман австралийского писатеfeeeeeeeeeeeee2fefef ef ejf ej jefb jeb jeb jef jebfj ebj bejb jeb fjb ejbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff f fffffffffffffffffffffffffffffffffffffffwewwef we fi239efh 39f3e ehu hfe3u hf3uefh3u fh3eu3hfu3feu3hfh3u h3 fuh3 ufh3uef h3ля Грегори Дэвида Робертса. Основой для книги послужили события собственной жизни автора. Основное действие романа разворачивается в Индии, в Бомбее (Мумбаи) в 1980-х годах. ";
        String sherlok = "Ше́рлок — английское имя, фамилия и топоним. Может обозначать:";
        library.put(HARRY_POTTER.toUpperCase(), harry_potter);
        library.put(BOOK_NAME_1984.toUpperCase(), _1984);
        library.put(SHANTARAM.toUpperCase(), shantaram);
        library.put(SHERLOK.toUpperCase(), sherlok);
        return library;
    }
}
